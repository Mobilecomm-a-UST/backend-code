"""
Django settings for mcom_website project.

Generated by 'django-admin startproject' using Django 4.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# BASE_DIR = Path('D:\MobileComm_website\Mcom Backend\mcom_website').resolve()

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-1xc)jmr9c-dlz=9z9c+b*(5ka9ipz@dk1frw4=bz9s701)_0m#"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# settings.py


ALLOWED_HOSTS = ["*"]
#ALLOWED_HOSTS = ['122.176.141.197', 'localhost', '127.0.0.1', '0.0.0.0']


# Application definition
CORS_ORIGIN_ALLOW_ALL = True
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "trend",
    "Original_trend",
    "accounts",
    "rest_framework",
    "corsheaders",
    "rest_framework.authtoken",
    "Bihar_trend",
    "vendor_management",
    # "Soft_AT_APP",
    "rajTrendAPP",
    "kolTrendAPP",
    "hrTrendAPP",
    "apTrendAPP",
    "pbTrendAPP",
    "delTrendAPP",
    "Physical_AT_APP",
    "Performance_AT_APP",
    "WPR_DPR2",
    "orishaTrendAPP",
    "mpTrendAPP",
    "Degrow",
    "TNCHTrendAPP",
    "kol_degrow",
    "Merged_APP",
    "scheduled_rna_Pld_alarm_app",
    "mumTrendAPP",
    "jkTrendAPP",
    "ktkTrendAPP",
    "upwTrendAPP",
    "UE_degrow",
    "testingAPP",
    "panIndiaRnaPayloadAlarm",
    "MDP",
    "equipmentInventory",
    "MDP_UBR",
    "Soft_AT_Rejected.apps.SoftAtRejectedConfig",
    "SOFT_AT_VINAY",
    "mailapp",
    "Profile",
    "sslserver",
    "UBR_Soft_Phy_AT_Rejection_App",
    "Degrow_HR_V2",
    "Zero_Count_Rna_Payload_Tool",
    "Audit_ZTE_HR",
    "MO_BASED_REPORT",
    "Degrow_PB_V1",
    "Degrow_PB_V2",
    "employee_skills",
    "IntegrationTracker",
    "AUDIT_TOOL",
    "django_celery_results",
    "django_celery_beat",
    "RCA_TOOL",
    "NOM_AUDIT",
    "universal_alarm",
    "Daily_Alarm_Status",
    "LKF_StatusApp",
    "gpl_audit_tool",
    "Soft_AT_Checklist_Ericsson",
    "LTE_Integration_Scripting_Automtion",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
]


CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://122.176.141.197:3000",  # If React is hosted here
    # Add other frontend origins as needed
]
CORS_ALLOW_ALL_ORIGINS = True
# CORS_ORIGIN_ALLOW_ALL = False
# CORS_ORIGIN_WHITELIST = (
#   'http://192.168.0.55:3000',
# )

ROOT_URLCONF = "mcom_website.urls"
TEMPLATES_DIR = os.path.join(BASE_DIR, "templates")
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [TEMPLATES_DIR],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "trend.context_processor.circle",
            ],
        },
    },
]

WSGI_APPLICATION = "mcom_website.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases


DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "mobilecomm",
        "USER": "postgres",
        "PASSWORD": "mcomnpn",
        "HOST": "localhost",
    }
}
# DATABASES = {
#    'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'DPR',
#         'USER':'postgres',
#         'PASSWORD':'1234',
#         'HOST':'localhost'
# }}


# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }
# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# nishant verma comment
# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "en-us"

# TIME_ZONE = 'UTC'
TIME_ZONE = "Asia/Kolkata"
# USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = "static/"
# STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]


MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_URL = "/media/"
# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

REST_FRAMEWORK = {
    "DEFAULT_RENDERER_CLASSES": [
        "rest_framework.renderers.JSONRenderer",
        "rest_framework.renderers.BrowsableAPIRenderer",
    ],
    "DEFAULT_PARSER_CLASSES": [
        "rest_framework.parsers.JSONParser",
        "rest_framework.parsers.MultiPartParser",
        "rest_framework.parsers.FormParser",
    ],
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.TokenAuthentication",
    ],
}

# CELERY_BROKER_URL = "redis://localhost:6379/0"
# CELERY_RESULT_BACKEND = "redis://localhost:6379/0"

# CELERY_BROKER_URL = 'pyamqp://guest:guest@localhost:5672//'
CELERY_BROKER_URL = "pyamqp://guest@localhost//"
CELERY_RESULT_BACKEND = "rpc://"


DATA_UPLOAD_MAX_NUMBER_FILES = 10000


# DATA_UPLOAD_MAX_MEMORY_SIZE = 104857600


# FILE_UPLOAD_MAX_MEMORY_SIZE = 10485760


# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'formatters': {
#         'verbose': {
#             'format': '{asctime} {levelname} {name} {message}',
#             'style': '{',
#         },
#         'simple': {
#             'format': '{levelname} {message}',
#             'style': '{',
#         },
#     },
#     'handlers': {
#         'console': {
#             'level': 'DEBUG',
#             'class': 'logging.StreamHandler',
#             'formatter': 'simple',
#         },
#         'file': {
#             'level': 'DEBUG',
#             'class': 'logging.FileHandler',
#             'filename': 'django_request.log',
#             'formatter': 'verbose',
#         },
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['console', 'file'],
#             'level': 'DEBUG',
#             'propagate': True,
#         },
#         'django.request': {
#             'handlers': ['console', 'file'],
#             'level': 'DEBUG',
#             'propagate': False,
#         },
#     },
# }


CELERY_BROKER_URL = "pyamqp://guest@localhost//"
CELERY_RESULT_BACKEND = "django-db"

# CELERY_CACHE_BACKEND = 'default'
CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.db.DatabaseCache",
        "LOCATION": "cachedb",
    }
}

# Celery Beat specific settings
CELERY_BEAT_SCHEDULER = "django_celery_beat.schedulers.DatabaseScheduler"


from celery.schedules import crontab

CELERY_BEAT_SCHEDULE = {
    "create-next-day-records-softat": {
        "task": "SOFT_AT_VINAY.tasks.create_next_day_records",  # Path to your task
        "schedule": crontab(hour=0, minute=0),  # Run every day at midnight
    },
    "alarmdump-check-data-at-10am": {
        "task": "RCA_TOOL.tasks.alarmdump_check_data_and_notify",
        "schedule": crontab(hour=10, minute=0),  # Executes daily at 10:00 AM
    },
    "KPI-4G-check-data-at-10am": {
        "task": "RCA_TOOL.tasks.KPI_4G_check_data_and_notify",
        "schedule": crontab(hour=10, minute=0),  # Executes daily at 10:00 AM
    },
    "TantitiveCounter-check-data-at-10am": {
        "task": "RCA_TOOL.tasks.TantitiveCounter_check_data_and_notify",
        "schedule": crontab(hour=10, minute=0),  # Executes daily at 10:00 AM
    },
    "level-wise-mail-notification": {
        "task": "Zero_Count_Rna_Payload_Tool.tasks.level_wise_mail_notification",
        "schedule": crontab(hour=10, minute=0),  # Executes daily at 10:00 AM
    },
}
