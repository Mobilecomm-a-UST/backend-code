# Generated by Django 4.1.3 on 2024-12-12 12:43

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Daily_2G_KPI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Short_name', models.CharField(max_length=500)),
                ('Date', models.DateField(null=True)),
                ('Cell_Name', models.CharField(max_length=500)),
                ('MV_2G_Site_Name', models.CharField(max_length=500)),
                ('Site_Name', models.CharField(max_length=500)),
                ('CGI_2G', models.CharField(max_length=500)),
                ('OEM_GGSN', models.CharField(max_length=500)),
                ('MV_Total_Voice_Traffic_BBH', models.CharField(max_length=500)),
                ('Network_availability_RNA', models.CharField(max_length=500)),
                ('MV_of_2G_Cell_with_Network_Availability', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Daily_4G_KPI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Short_name', models.CharField(max_length=500)),
                ('Date', models.DateField(null=True)),
                ('ECGI_4G', models.CharField(max_length=500)),
                ('MV_Site_Name', models.CharField(max_length=500)),
                ('OEM_GGSN', models.CharField(max_length=500)),
                ('MV_Freq_Band', models.CharField(max_length=500)),
                ('MV_Freq_Bandwidth', models.CharField(max_length=500)),
                ('MV_Radio_NW_Availability', models.FloatField(default=0, max_length=500)),
                ('MV_4G_Data_Volume_GB', models.FloatField(default=0, max_length=500)),
                ('MV_VoLTE_raffic', models.FloatField(default=0, max_length=500)),
                ('name_SiteA', models.FloatField(default=0, max_length=500)),
                ('name_SiteB', models.FloatField(default=0, max_length=500)),
                ('MV_DL_User_Throughput_Kbps', models.FloatField(default=0, max_length=500)),
                ('MV_E_UTRAN_Average_CQI', models.FloatField(default=0, max_length=500)),
                ('UL_RSSI', models.FloatField(default=0, max_length=500)),
                ('MV_Average_number_of_used_DL_PRBs', models.FloatField(default=0, max_length=500)),
                ('MV_UL_RSSI_dBm_PRB', models.FloatField(default=0, max_length=500)),
                ('MV_RRC_Setup_Success_Rate', models.FloatField(default=0, max_length=500)),
                ('MV_ERAB_Setup_Success_Rate', models.FloatField(default=0, max_length=500)),
                ('MV_PS_Drop_Call_Rate', models.FloatField(default=0, max_length=500)),
                ('MV_UL_User_Throughput_Kbps', models.FloatField(default=0, max_length=500)),
                ('MV_Max_Connecteda_User', models.FloatField(default=0, max_length=500)),
                ('MV_PUCCH_SINR', models.FloatField(default=0, max_length=500)),
                ('MV_Average_UE_Distance_KM', models.FloatField(default=0, max_length=500)),
                ('MV_PS_handover_success_rate_LTE_INTER_SYSTEM', models.FloatField(default=0, max_length=500)),
                ('MV_PS_handover_success_rate_LTE_INTRA_SYSTEM', models.FloatField(default=0, max_length=500)),
                ('UL_RSSI_Nokia_RSSI_SINR', models.FloatField(default=0, max_length=500)),
                ('MV_VoLTE_DCR', models.FloatField(default=0, max_length=500)),
                ('MV_Packet_Loss_DL', models.FloatField(default=0, max_length=500)),
                ('MV_Packet_Loss_UL', models.FloatField(default=0, max_length=500)),
                ('PS_InterF_HOSR', models.FloatField(default=0, max_length=500)),
                ('PS_IntraF_HOSR', models.FloatField(default=0, max_length=500)),
                ('dlRsBoost', models.FloatField(blank=True, default=0, null=True)),
                ('RS_Power_dB', models.FloatField(blank=True, default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MS1_SITE_DONE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Short_name', models.CharField(max_length=500)),
                ('Date', models.DateField(null=True)),
                ('MOVED_AT', models.DateTimeField(auto_now_add=True)),
                ('ECGI_4G', models.CharField(max_length=500)),
                ('MV_Site_Name', models.CharField(max_length=500)),
                ('OEM_GGSN', models.CharField(max_length=500)),
                ('MV_Freq_Band', models.CharField(max_length=500)),
                ('MV_Freq_Bandwidth', models.CharField(max_length=500)),
            ],
            options={
                'verbose_name': 'MS1_SITE_DONE',
                'verbose_name_plural': 'MS1_SITES_DONE',
            },
        ),
        migrations.CreateModel(
            name='Raw_Kpi_Table_2G',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Cell_Name', models.CharField(max_length=500)),
                ('Site_ID', models.CharField(max_length=500)),
                ('OEM', models.CharField(max_length=500)),
                ('Technology', models.CharField(max_length=500)),
                ('TRAFFIC_2G', models.CharField(max_length=500)),
                ('RNA_2G', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Raw_Kpi_Table_4G',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Cell_Name', models.CharField(max_length=500)),
                ('Site_ID', models.CharField(max_length=500)),
                ('OEM', models.CharField(max_length=500)),
                ('Technology', models.CharField(max_length=500)),
                ('Payload_4G', models.CharField(max_length=500)),
                ('RNA_4G', models.CharField(max_length=500)),
                ('VOLTE_TRAFFIC', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Ticket_Counter_Table_Data',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated.')),
                ('updated_by', models.CharField(blank=True, help_text='User who last updated the record.', max_length=500, null=True)),
                ('ticket_id', models.CharField(editable=False, help_text='Unique ticket identifier.', max_length=2000, primary_key=True, serialize=False, unique=True)),
                ('Circle', models.CharField(db_index=True, default='', help_text='Circle of the ticket.', max_length=500)),
                ('Short_name', models.CharField(help_text='Short name of the site.', max_length=500, null=True)),
                ('Site_ID', models.CharField(help_text='Site identifier.', max_length=500)),
                ('priority', models.CharField(choices=[('P0', 'P0'), ('P1', 'P1'), ('P2', 'P2')], help_text='Priority level of the ticket.', max_length=500)),
                ('Date', models.DateField(auto_now=True, help_text='Date associated with the ticket.')),
                ('Open_Date', models.DateField(auto_now_add=True, help_text='Date when the ticket was opened.')),
                ('Unique_Id', models.CharField(editable=False, help_text='Unique identifier combining site and date.', max_length=1000)),
                ('Status', models.CharField(help_text='Current status of the ticket.', max_length=500)),
                ('Remarks', models.TextField(default='', help_text='Additional remarks about the ticket.')),
                ('Ownership', models.CharField(default='', help_text='Ownership details.', max_length=500)),
                ('Circle_Spoc', models.CharField(default='', help_text='Circle SPOC details.', max_length=500)),
                ('Pre_Remarks', models.JSONField(default=dict, help_text='Preliminary remarks about the ticket.')),
                ('aging', models.PositiveIntegerField(default=0, help_text='Number of days since the ticket was opened.')),
                ('auto_rca', models.CharField(default='', help_text='Auto root cause analysis.', max_length=500)),
                ('proposed_solution', models.TextField(default='', help_text='Proposed solution for the issue.')),
                ('category', models.CharField(default='', help_text='Detailed description of the ticket.', max_length=500)),
            ],
            options={
                'verbose_name': 'Ticket Counter Table Data',
                'verbose_name_plural': 'Ticket Counter Table Data',
            },
        ),
        migrations.CreateModel(
            name='TicketCounter',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('counter', models.PositiveIntegerField(default=0, help_text='Auto-increment counter for ticket IDs.')),
            ],
        ),
        migrations.AddConstraint(
            model_name='ticket_counter_table_data',
            constraint=models.UniqueConstraint(fields=('Short_name', 'Date'), name='unique_shortname_date'),
        ),
    ]
